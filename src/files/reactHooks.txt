// Step 1: Import React and the required hooks
import React, { useState, useEffect } from 'react';

// Step 2: Create a functional component
function UserList() {
    // Step 3: Define state variables using useState hook
    const [users, setUsers] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);

    // Step 4: Define effect using useEffect hook
    useEffect(() => {
        // Function to fetch data from the API
        const fetchData = async () => {
            try {
                const response = await fetch('https://jsonplaceholder.typicode.com/users');
                if (!response.ok) {
                    throw new Error('Failed to fetch data');
                }
                const data = await response.json();
                setUsers(data);
                setIsLoading(false);
            } catch (error) {
                setError(error.message);
                setIsLoading(false);
            }
        };

        // Call the fetchData function
        fetchData();
    }, []); // Empty dependency array means the effect runs only once after the initial render

    // Step 5: Render the component with JSX
    return (
        <div>
            <h2>User List</h2>
            {isLoading ? (
                <p>Loading...</p>
            ) : error ? (
                <p>Error: {error}</p>
            ) : (
                <ul>
                    {users.map(user => (
                        <li key={user.id}>{user.name}</li>
                    ))}
                </ul>
            )}
        </div>
    );
}